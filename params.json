{
  "name": "MinecraftColorCodes",
  "tagline": "A Javascript library for translating Minecraft Color Codes!",
  "body": "#MinecraftColorCodes\r\n###A Javascript library to translate Minecraft color codes into HTML.\r\nRecently, I was making my own Minecraft Server website, and I wanted to display the MOTD and the amount of players online.\r\nThen, came the problem.\r\nWhen loading the MOTD, I stumbled across this weird character. §\r\nAfter searching, I realised this was a piece of Minecraft Color Codes...\r\n\r\nI decided to translate this into HTML using JavaScript, and I wanted to share this with all of you around the world with the same problem.\r\n\r\n\r\n##Installation\r\nDownload the latest version of Minecraft Color Codes and unzip it.\r\nThen, copy MinecraftColorCodes.VERSION.js into your initial directory of your website.\r\nYou can choose to use the minified compressed version (Faster, for production) or the uncompressed version (Slightly slower, for personal use).\r\nOpen your HTML file for your website, and copy this into the <head> section.\r\n```\r\n<head>\r\n<script src=\"MinecraftColorCodes.VERSION.js\"></script>\r\n</head>\r\n```\r\n\r\nYou are now ready to launch!\r\n\r\n##Usage\r\nI'll just give an example.\r\n```\r\n<script>\r\nvar myMOTD = \"§d§lMy Example MOTD: §eDoes it look nice?\"\r\nvar newMOTD = myMOTD.replaceColorCodes(); //The brackets here are essential.\r\nconsole.log(newMOTD); //Just displaying it to the console.\r\n</script>\r\n```\r\nNow, if you don't understand a piece of that code, you probably don't know JavaScript.\r\nThere are amazing website on the internet that provide you a full tutorial and a lesson on how to use JavaScript.\r\nPeople who __do__ know Javascript, can probably understand all the lines.\r\n\r\nEasy example, huh?\r\nBest part, there is no complex example. This is all there is to it. Easy to use, and easy to understand.\r\n\r\n\r\n##Bugs / ToDo\r\n- #1 §k does not work. (FIXED IN VERSION 3.0)\r\n- #2 Having multiple formatting codes does not work. (FIXED IN VERSION 2.0)\r\n- #3 The spaces disappear, and the output is a whole big chunk of letters. (FIXED IN VERSION 3.5)\r\n- #4 Color Codes should reset previous occuring formatting codes, yet they seem to keep the formatting. (FIXED IN VERSION 3.7)\r\n\r\nIf you find one, please submit an issue ticket or a pull request.\r\n\r\n- Add Class support (DROPPED!)\r\n- Add Support for custom class, like first match, second match, etc... (DROPPED!)\r\n- Put everything in a huge String.prototype function. (DONE!)\r\n- Fix Bugs (DONE FOR ALL LISTED)\r\n\r\n##Extras\r\nYou might want to get your server's MOTD, but you don't know how to access the server from your website? Use this code! (jQuery is required!)\r\n```\r\n$(document).ready(function(){\r\n  $.getJSON('https://mcapi.us/server/status?ip=c.nerd.nu', function(obj){\r\n    if(obj.online === true){\r\n      motdHTML = obj.motd.replaceColorCodes();\r\n      console.log(motdHTML);\r\n    } else {\r\n      console.log(\"Server is offline...\");\r\n    }\r\n  });\r\n})\r\n```\r\nhttps://mcapi.us provides JSON responses from the server provided in the URL. By using this, you can parse the JSON, and get your desired information! Visit http://mcapi.us for more information on the JSON format.\r\n\r\nBasically, it gets the JSON from the website once your website has finished loading, then converts the Color Codes if the server is online, and if the server is offline... Well yeah.\r\n\r\n##Update Log\r\nv1.0 - Created this file, added replacements for color codes\r\n\r\nv1.1 - Added formatting replacements (e.g. §l)\r\n\r\nv1.2 - Added support for multiple occurence of one color code in a string\r\n\r\nv1.3 - Added support for New Line, and Spaces because spaces were buggy. The ```\\n``` character translates into ```<br>```, and the spaces translate into Unicode spaces (```&#32;```).\r\n\r\nv2.0 - A complete recode. Now fixed Bug #2, 'Having multiple formatting codes does not work'. New line and spaces was removed.\r\n\r\nv3.0 - Added §k, §r, and \\n support. Now also requires the output element ID.\r\n\r\nv3.1 - Finally! Support for class names too!\r\n\r\nv3.5 - Fixed Bug #3, 'Spaces dissappear', by adding a CSS property to the output element.'\r\n\r\nv3.7 - Fixed Bug #4, put everything in a huge ```String.prototype``` function, so now you can't input your output element ID/Class. I mean come on, what if you just wanted to output to the console? I also changed a few tweaks here and there.\r\n\r\n##Legal\r\nYou can modify this file in any way, but if you want, create a pull request so I can have a look. Also, try not sell this file/work for a price. I mean come on, if you really want money, go get a proper job. Thirdly and lastly, you can not give away this file/work without giving credit to me, and possibly giving the URL to this Github page. Due to the informality of this piece of text, you could ignore this if you want to.\r\n\r\n##Thank you everyone for the downloads, and enjoy translating Minecraft into HTML!",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}